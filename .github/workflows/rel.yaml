name: Release

on:
  push:
    branches:
    - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CARGO_TERM_COLOR: always

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'true'

    - name: Log into the container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        cache: 'pip'

    - name: Build Docker image using build.py
      run: |
        pip install -r requirements.txt
        python ./build.py build app.yml

    - name: Apply tags and publish image
      run: |
        for tag in '${{ steps.meta.outputs.tags }}'; do
          docker tag local_discourse/app $tag

          if [ "${{ github.event_name }}" != "pull_request" ]; then
            docker push $tag
          fi
        done

    # - name: Build and push Docker image
    #   id: push
    #   uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
    #   with:
    #     push: ${{ github.event_name != 'pull_request' }}
    #     tags: ${{ steps.meta.outputs.tags }}
    #     labels: ${{ steps.meta.outputs.labels }}

    # - name: Generate artifact attestation
    #   uses: actions/attest-build-provenance@v2
    #   with:
    #     subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
    #     subject-digest: ${{ steps.push.outputs.digest }}
    #     push-to-registry: ${{ github.event_name != 'pull_request' }}
